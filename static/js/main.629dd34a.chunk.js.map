{"version":3,"sources":["actions/index.js","components/InputFields/RubInput.js","components/InputFields/CurInput.js","components/CurService-context/index.js","components/CurService-context/CurServiceContext.js","components/hoc/index.js","components/hoc/WithService.js","components/SelectField/Select.js","components/SelectField/index.js","components/app/App.js","components/app/index.js","services/CurService.js","reducers/index.js","store.js","index.js"],"names":["dataRequested","type","dataLoaded","data","dataError","error","text","curChanged","value","rubInput","curInput","InputTemplate","styled","input","mapDispatchToProps","connect","state","inputValue","rubInputNum","React","useRef","htmlFor","id","placeholder","ref","onChange","e","target","onFocus","current","select","curInputNum","CurServiceContext","createContext","WithService","WrappedComp","props","Consumer","service","Service","SelectTemplate","Select","handleChange","this","url","getData","then","AUD","catch","curObj","loading","selected","curArr","Object","entries","view","map","obj","Component","LoadingComponent","apiBase","selectedOption","actions","MainContainer","main","ContentContainer","div","Heading","h1","App","fetch","method","headers","response","console","log","CurService","parser","DOMParser","a","res","body","xml","parseFromString","formData","charArr","getElementsByTagName","valueArr","i","length","innerHTML","initialState","errorText","reducer","action","parseFloat","replace","toFixed","store","createStore","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.629dd34a.chunk.js","sourcesContent":["const dataRequested = () => {\n    return {\n        type: 'DATA_REQUESTED'\n    }\n}\n\nconst dataLoaded = (data) => {\n    return {\n        type: 'DATA_LOADED',\n        data\n    }\n}\n\nconst dataError = (error) => {\n    return {\n        type: 'DATA_ERROR',\n        text: error\n    }\n}\n\nconst curChanged = (value) => {\n    return {\n        type: 'CUR_CHANGED',\n        value\n    }\n}\n\nconst rubInput = (value) => {\n    return {\n        type: 'RUB_INPUT',\n        value\n    }\n}\n\nconst curInput = (value) => {\n    return {\n        type: 'CUR_INPUT',\n        value\n    }\n}\n\n\nexport {\n    dataRequested,\n    dataLoaded,\n    dataError,\n    curChanged,\n    rubInput,\n    curInput\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { rubInput } from '../../actions';\nimport styled from 'styled-components';\n\n\nconst InputTemplate = styled.input`\n    width: 250px;\n    margin: 5px;\n    border: 1px solid transparent;\n    border-radius: 20px;\n    outline: none;\n    padding: 10px;\n    border: 1px solid transparent;\n    height: 30px;\n    font-family: 'Courier Prime', monospace;\n    font-size: 1.5rem;\n`;\n\n\nconst RubInput = ({inputValue, rubInput}) => {\n\n\n    const onHandleChange = (e) => {\n        rubInput(e.target.value);\n    }\n\n    const input = React.useRef();\n    return (\n        <>\n            <label htmlFor=\"rub\">Ruble</label>\n            <InputTemplate \n                id=\"rub\" \n                type=\"number\"\n                placeholder=\"0\" \n                value={inputValue}\n                ref={input}\n                onChange={onHandleChange}\n                onFocus={() => input.current.select()} />\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        inputValue: state.rubInputNum\n    }\n}\n\nconst mapDispatchToProps =  {\n    rubInput\n}\n\nexport {InputTemplate};\nexport default connect(mapStateToProps, mapDispatchToProps)(RubInput);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { curInput } from '../../actions';\nimport { InputTemplate } from './index';\n\n\n\nconst CurInput = ({inputValue, curInput}) => {\n\n\n    function handleChange(e) {\n        curInput(e.target.value);\n    }\n    const input = React.useRef();\n    return (\n        <>\n            <InputTemplate\n                id=\"cur\"\n                type=\"number\"\n                placeholder=\"0\"\n                value={inputValue || ''} \n                onChange={handleChange} \n                ref={input}\n                onFocus={() => input.current.select()}/>\n            <label htmlFor=\"cur\">Currency</label>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        inputValue: state.curInputNum\n    }\n}\n\nconst mapDispatchToProps = {\n    curInput\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurInput);","import CurServiceContext from './CurServiceContext';\nexport default CurServiceContext;","import React from 'react';\n\nconst CurServiceContext = React.createContext();\n\nexport default CurServiceContext;","import WithService from \"./WithService\";\n\nexport default WithService;","import React from 'react';\nimport CurServiceContext from '../CurService-context';\n\nconst WithService = () => (WrappedComp) => {\n    return (props) => {\n        return (\n            <CurServiceContext.Consumer>\n                {\n                    (service) => {\n                        return <WrappedComp {...props} Service={service}/>\n                    }\n                }\n            </CurServiceContext.Consumer>\n        )\n    }\n}\n\nexport default WithService;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport styled from 'styled-components';\nimport WithService from '../hoc';\n\nconst SelectTemplate = styled.select`\n    width: 250px;\n    margin: 5px;\n    border: 1px solid transparent;\n    border-radius: 20px;\n    height: 30px;\n    outline: none;\n    padding-left: 5px;\n    font-size: 1rem;\n    font-family: 'Courier Prime', monospace;\n`;\n\n\nclass Select extends Component {\n    \n    componentDidMount() {\n\t\tthis.props.dataRequested();\n\n        const {Service, url} = this.props;\n\n        const dataObj = Service.getData(url);\n        dataObj.then(data => {\n            this.props.dataLoaded(data);\n\t\t\tthis.props.curChanged(data.AUD);\n        })\n\t\t.catch(error => this.props.dataError(error));\n\t\t\n    }\n\n\thandleChange = (e) => {\n\t\tthis.props.curChanged(e.target.value);\n\t}\n\n\n    render() {\n\t\tconst {curObj, loading, selected} = this.props;\n\t\tconst curArr = Object.entries(curObj);\n\n\t\tconst view = !loading ? curArr.map((obj) => <option key={obj[0]} value={obj[1]}> {obj[0]} </option> ) : <LoadingComponent/>\n\n        return (\n            <SelectTemplate \n\t\t\t\tvalue={selected}\n\t\t\t\tonChange={this.handleChange}>\n\t\t\t\t{view}\n            </SelectTemplate>\n        )\n    }\n}\n\nconst LoadingComponent = () => {\n\treturn (\n\t\t<option>loading...</option>\n\t)\n}\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\turl: state.apiBase,\n\t\tcurObj: state.curObj,\n\t\tselected: state.selectedOption,\n\t\tloading: state.loading,\n\t\terror: state.error\n\t}\n}\n\n\nexport default WithService()(connect(mapStateToProps, actions)(Select));","import Select from './Select';\nexport default Select;","import React, { Component } from 'react';\nimport {RubInput, CurInput} from '../InputFields';\nimport Select from '../SelectField';\nimport styled from 'styled-components';\n\n\nconst MainContainer = styled.main`\n    position:absolute;\n\tdisplay: flex;\n\tjustify-content: center;\n\tbackground-color: gray;\n\talign-items:center;\n\talign-content: center;\n\tmin-width: 100%;\n\tmin-height: 100%;\n`;\n\nconst ContentContainer = styled.div`\n    position: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-content: center;\n\talign-items: center;\n\tfont-family: 'Courier Prime', monospace;\n`;\n\n\nconst Heading = styled.h1`\n    margin: 0 0 30px 0;\n    font-weight: 700;\n`;\n\nclass App extends Component {\n    getData() {\n        let headersList = {\n            \"Accept\": \"*/*\",\n            \"User-Agent\": \"Thunder Client (https://www.thunderclient.com)\",\n            \"Content-Type\": \"text/html; charset=UTF-8\"\n           }\n           \n           fetch(\"https://egks.ru/card?number=000210349\", { \n             method: \"POST\",\n             headers: headersList\n           }).then(function(response) {\n             return response.text();\n           }).then(function(data) {\n             console.log(data);\n           })\n    }\n    \n    render() {\n        this.getData();\n        return (\n            <MainContainer>\n                <ContentContainer>\n                    <Heading>\n                        Digital Currency Converter\n                    </Heading>\n                    <RubInput/>\n                    <Select/>\n                    <CurInput/>\n                </ContentContainer>\n            </MainContainer>\n        );\n    }\n}\n\nexport default App;\n\n","import App from './App';\nexport default App;","export default class CurService {\n    constructor() {\n        this.parser = new DOMParser();\n    }\n\n    async getData(url) {\n        const res = await fetch(url);\n        const body = await res.text();\n        const xml = this.parser.parseFromString(body, 'text/xml');\n        return this.formData(xml);\n    }\n\n    formData(data) {\n        const curObj = {},\n              charArr = data.getElementsByTagName('CharCode'),\n              valueArr = data.getElementsByTagName('Value');\n        \n        for (let i = 0; i < charArr.length && i < valueArr.length; i++) {\n            curObj[charArr[i].innerHTML] = valueArr[i].innerHTML;\n        }\n        return curObj;\n    }\n}","const initialState = {\n    apiBase: 'https://www.cbr-xml-daily.ru/daily_utf8.xml',\n    curObj: {},\n    selectedOption: '',\n    rubInputNum: '',\n    curInputNum: '',\n    loading: true,\n    error: false,\n    errorText: ''\n}\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'DATA_REQUESTED':\n            return {\n                ...state,\n                curObj: state.curObj,\n                loading: true,\n            };\n\n        case 'DATA_LOADED':\n            return {\n                ...state,\n                curObj: action.data,\n                loading: false\n            };\n\n        case 'DATA_ERROR':\n            return {\n                ...state,\n                loading: false,\n                error: true,\n                errorText: action.text\n            };\n\n        case 'CUR_CHANGED':\n            return {\n                ...state,\n                selectedOption: action.value,\n                // curInputNum: +state.rubInputNum * Math.round(parseFloat(state.selectedOption.replace(',', '.')))\n            }\n        \n        case 'RUB_INPUT':\n            return {\n                ...state,\n                rubInputNum: action.value,\n                curInputNum: (+action.value / parseFloat(state.selectedOption.replace(',', '.'))).toFixed(2)\n            }\n\n        case 'CUR_INPUT':\n            return {\n                ...state,\n                rubInputNum: (+action.value * parseFloat(state.selectedOption.replace(',', '.'))).toFixed(2),\n                curInputNum: +action.value\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport { Provider } from 'react-redux';\nimport CurService from './services/CurService';\nimport CurServiceContext from './components/CurService-context';\nimport store from './store';\nimport './fonts.css';\n\nconst service = new CurService();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<CurServiceContext.Provider value={service}>\n\t\t\t\t<App/>\n\t\t\t</CurServiceContext.Provider>\n\t\t</Provider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}